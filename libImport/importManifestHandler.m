function [ importManifest ] = importManifestHandler( action, varargin )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
%1 update
%2 save
%3 preallocate

if action == 1 %Update
    importManifest = struct('runNumber', varargin{1}.run, ...
                            'RAWFilename', varargin{1}.filename, ...
                            'dataRange', varargin{2}, ...
                            'PI660FileVersion', varargin{1}.PI660Version, ...
                            'decimationFactor', varargin{1}.DecimateBy, ...
                            'decimationType', varargin{1}.decimateType, ...
                            'numberOfChannels', varargin{1}.NumberOfChannels, ...
                            'channelNames', varargin{1}.Name, ...
                            'channelUnits', varargin{1}.Units, ...
                            'channelSensitivities', varargin{1}.sensitivities, ...
                            'channelOffsets', varargin{1}.offsets, ...
                            'channelGains', varargin{1}.gains, ...
                            'channelVoltageSlope', varargin{1}.VoltageSlope, ...
                            'channelVoltageOffset', varargin{1}.VoltageOffset, ...
                            'channelPostBalanceMV', varargin{1}.PostBalanceMv ...
                            ); 
    %}
elseif action == 2 %Save
    varargin{1}.importManifest = varargin{2};
elseif action == 3 %Preallocate
    dummyCell = cell(1, varargin{2});

    importManifest = struct('runNumber', dummyCell, 'RAWFilename', dummyCell, 'dataRange', dummyCell, ...
                            'PI660FileVersion', dummyCell, 'decimationFactor', dummyCell, 'decimationType', dummyCell, ...
                            'numberOfChannels', dummyCell, 'channelNames', dummyCell, 'channelUnits', dummyCell, ...
                            'channelSensitivities', dummyCell, 'channelOffsets', dummyCell, 'channelGains', dummyCell, ...
                            'channelVoltageSlope', dummyCell, 'channelVoltageOffset', dummyCell, ...
                            'channelPostBalanceMV', dummyCell ...
                            );
                        
    varargin{1}.importManifest = importManifest;
else
    error('Unknown manifest action requested');
end
end

